% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runMI-methods.R
\docType{class}
\name{lavaan.mi-class}
\alias{lavaan.mi-class}
\alias{show,lavaan.mi-method}
\alias{summary,lavaan.mi-method}
\alias{anova,lavaan.mi-method}
\alias{nobs,lavaan.mi-method}
\alias{coef,lavaan.mi-method}
\alias{vcov,lavaan.mi-method}
\alias{fitted,lavaan.mi-method}
\alias{fitted.values,lavaan.mi-method}
\alias{residuals,lavaan.mi-method}
\alias{resid,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{show,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{summary,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{nobs,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{coef,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{vcov,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{anova,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{fitted,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{fitted.values,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{residuals,lavaan.mi-method}
\alias{lavaan.mi-class}
\alias{resid,lavaan.mi-method}
\title{Class for a lavaan Model Fitted to Multiple Imputations}
\usage{
\S4method{show}{lavaan.mi}(object)

\S4method{summary}{lavaan.mi}(object, se = TRUE, ci = TRUE, level = 0.95,
  standardized = FALSE, rsquare = FALSE, fmi = FALSE, scale.W = TRUE,
  asymptotic = FALSE, add.attributes = TRUE)

\S4method{nobs}{lavaan.mi}(object, total = TRUE)

\S4method{coef}{lavaan.mi}(object, type = "free", labels = TRUE)

\S4method{vcov}{lavaan.mi}(object, type = c("pooled", "between", "within"),
  scale.W = TRUE)

\S4method{anova}{lavaan.mi}(object, h1 = NULL, test = c("D3", "D2", "D1"),
  pool.robust = FALSE, scale.W = TRUE, asymptotic = FALSE,
  constraints = NULL, indices = FALSE, baseline = NULL,
  method = "default", A.method = "delta", H1 = TRUE, type = "Chisq")

\S4method{fitted}{lavaan.mi}(object)

\S4method{fitted.values}{lavaan.mi}(object)

\S4method{residuals}{lavaan.mi}(object, type = c("raw", "cor"))

\S4method{resid}{lavaan.mi}(object, type = c("raw", "cor"))
}
\value{
\item{coef}{\code{signature(object = "lavaan.mi", type = "free", labels = TRUE)}:
 See \code{\linkS4class{lavaan}}. Returns the pooled point estimates (i.e.,
 averaged across imputed data sets; see Rubin, 1987).}

\item{vcov}{\code{signature(object = "lavaan.mi", scale.W = TRUE,
 type = c("pooled","between","within"))}:  Returns the pooled covariance
 matrix of parameter estimates (\code{type = "pooled"}, the default), the
 within-imputations covariance matrix (\code{type = "within"}), or the
 between-imputations covariance matrix (\code{type = "between"}). If
 \code{scale=TRUE} (default), the pooled covariance matrix is calculated by
 scaling the within-imputation component by the average relative increase in
 variance (ARIV; see Enders, 2010, p. 235).  Otherwise, the pooled matrix is
 calculated as the weighted sum of the within-imputation and
 between-imputation components.  See Enders (2010, ch. 8) for details.}

\item{fitted.values}{\code{signature(object = "lavaan.mi")}: See
 \code{\linkS4class{lavaan}}. Returns model-implied moments, evaluated at the
 pooled point estimates.}
\item{fitted}{\code{signature(object = "lavaan.mi")}:
  alias for \code{fitted.values}}

\item{residuals}{\code{signature(object = "lavaan.mi", type = c("raw","cor"))}:
 See \code{\linkS4class{lavaan}}. By default (\code{type = "raw"}), returns
 the difference between the model-implied moments from \code{fitted.values}
 and the pooled observed moments (i.e., averaged across imputed data sets).
 Standardized residuals are also available, using Bollen's
 (\code{type = "cor"} or \code{"cor.bollen"}) or Bentler's
 (\code{type = "cor.bentler"}) formulas.}
\item{resid}{\code{signature(object = "lavaan.mi", type = c("raw","cor"))}:
 alias for \code{residuals}}

\item{nobs}{\code{signature(object = "lavaan.mi", total = TRUE)}: either
 the total (default) sample size or a vector of group sample sizes
 (\code{total = FALSE}).}

\item{anova}{\code{signature(object = "lavaan.mi", h1 = NULL,
  test = c("D3","D2","D1"), pool.robust = FALSE, scale.W = TRUE,
  asymptotic = FALSE, constraints = NULL, indices = FALSE, baseline = NULL,
  method = "default", A.method = "delta", H1 = TRUE, type = "Chisq")}:
  Returns a test of model fit if \code{h1} is \code{NULL}, or a test
  of the difference in fit between nested models if \code{h1} is another
  \code{lavaan.mi} object, assuming \code{object} is nested in \code{h1}. If
  \code{asymptotic}, the returned test statistic will follow a \eqn{\chi^2}
  distribution in sufficiently large samples; otherwise, it will follow an
  \emph{F} distribution. If a robust test statistic is detected in the
  \code{object} results (it is assumed the same was requested in \code{h1},
  if provided), then \code{asymptotic} will be set to \code{TRUE} and the
  pooled test statistic will be scaled using the average scaling factor (and
  average shift parameter or \emph{df}, if applicable) across imputations
  (unless \code{pool.robust = FALSE} and \code{test = "D2"}; see below).

  The default test (\code{"D3"}, or any of \code{"mr", "Meng.Rubin",
  "likelihood", "LRT"}) is a pooled likeliehood-ratio test (see Enders, 2010,
  ch. 8); \code{test = "mplus"} implies \code{"D3"} and \code{asymptotic =
  TRUE} (see Asparouhov & Muthen, 2010). When using a non-likelihood
  estimator (e.g., DWLS for categorical outcomes), \code{"D3"} is not
  available, so the default is changed to \code{"D2"} (alias can be any of
  \code{"lmrr", "Li.et.al", "pooled.wald"}), which returns a pooled test
  statistic. If \code{pool.robust = TRUE} (ignored if \code{test != "D2"} or
  if a robust test was not requested), the robust test statistic is pooled,
  whereas \code{pool.robust = FALSE} will pool the naive test statistic
  (or difference statistic) and apply the average scale/shift
  parameters to it (unavailable for mean- and variance-adjusted difference
  statistics, so \code{pool.robust} will be set \code{TRUE}). If
  \code{test = "D2"} and \code{pool.robust = TRUE}, further options can be
  passed to \code{\link[lavaan]{lavTestLRT}} via the arguments \code{method},
  \code{A.method}, \code{H1}, and \code{type}.

  \code{"D1"} is a Wald test calculated for constraints on the
  pooled point estimates, using the pooled covariance matrix of parameter
  estimates; see \code{\link[lavaan]{lavTestWald}} for details. \code{h1} is
  ignored when \code{test = "D1"}, and \code{constraints} is ignored when
  \code{test != "D1"}. The \code{scale.W} argument is passed to the
  \code{vcov} method (see description above).

  When \code{indices = TRUE} and \code{is.null(h1)}, popular indices of
  approximate fit (CFI, TLI/NNFI, RMSEA with CI, and SRMR) will be returned
  for \code{object}; see \code{\link[lavaan]{fitMeasures}} for details.
  Specific indices can be requested with a \code{character} vector (any of
  \code{"mfi", "rmsea", "gammaHat", "rmr", "srmr", "cfi", "tli", "nnfi",
  "rfi", "nfi", "pnfi", "ifi", "rni"}), or all available indices will be
  returned if \code{indices = "all"}. A custom user-specified \code{baseline}
  model, fit using \code{runMI}, can be used to calculate incremental fit
  indices (e.g., CFI, TLI). If \code{is.null(baseline)}, the default
  independence model will be used.}

\item{show}{\code{signature(object = "lavaan.mi")}: returns a message about
 convergence rates and estimation problems (if applicable) across imputed
 data sets.}

\item{summary}{\code{signature(object = "lavaan.mi", se = TRUE, ci = TRUE,
 level = .95, standardized = FALSE, rsquare = FALSE, fmi = FALSE,
 scale.W = FALSE, asymptotic = FALSE, add.attributes = TRUE)}: see
 \code{\link[lavaan]{parameterEstimates}} for details.
 By default, \code{summary} returns pooled point and \emph{SE}
 estimates, along with \emph{t} test statistics and associated \emph{df} and
 \emph{p} value, and 95\% CI (control using the \code{ci} and \code{level}
 arguments). If \code{asymptotic = TRUE}, \emph{z} instead of \emph{t}
 tests are returned. Standardized solution(s) can also be requested by name
 (\code{"std.lv"} or \code{"std.all"}) or both are returned with \code{TRUE}.
 \emph{R}-squared for endogenous variables can be requested, as well as the
 Fraction Missing Information (FMI) for parameter estimates. By default, the
 output will appear like \code{lavaan}'s \code{summary} output, but if
 \code{add.attributes = FALSE}, the returned \code{data.frame} will resemble
 the \code{parameterEstimates} output. The \code{scale.W} argument is
 passed to \code{vcov} (see description above).}
}
\description{
This class extends the \code{\linkS4class{lavaanList}} class, created by
fitting a lavaan model to a list of data sets. In this case, the list of
data sets are multiple imputations of missing data.
}
\section{Slots}{

\describe{
\item{\code{lavaanList_slots}}{All slots from \code{\linkS4class{lavaanList}} are
available, but \code{\link{runMI}} only populates a subset of the list
slots, some of them with custom information:}

\item{\code{DataList}}{The \code{list} of imputed data sets}

\item{\code{SampleStatsList}}{List of output from
\code{\link[lavaan]{lavInspect}(fit, "sampstat")} applied to each fitted
model}

\item{\code{ParTableList}}{See \code{\linkS4class{lavaanList}}}

\item{\code{vcovList}}{See \code{\linkS4class{lavaanList}}}

\item{\code{ParTableList}}{See \code{\linkS4class{lavaanList}}}

\item{\code{testList}}{\code{list} of estimated coefficients in matrix format (one
per imputation)}

\item{\code{GLIST}}{pooled \code{list} of coefficients in GLIST format}

\item{\code{seed}}{\code{integer} seed set before running imputations}

\item{\code{imputeCall}}{call from imputation (if used) stored as a \code{list} of
arguments}

\item{\code{convergence}}{\code{list} of \code{logical} vectors indicating whether,
for each imputed data set, (1) the model converged on a solution, (2)
\emph{SE}s could be calculated, (3) the (residual) covariance matrix of
latent variables (\eqn{\Psi}) is non-positive-definite, and (4) the residual
covariance matrix of observed variables (\eqn{\Theta}) is
non-positive-definite.}
}}

\section{Objects from the Class}{
 See the \code{\link{runMI}} function for
details. Wrapper functions include \code{\link{lavaan.mi}},
\code{\link{cfa.mi}}, \code{\link{sem.mi}}, and \code{\link{growth.mi}}.
}

\examples{

## See ?runMI help page

}
\references{
Asparouhov, T., & Muthen, B. (2010). \emph{Chi-square statistics
with multiple imputation}. Technical Report. Retrieved from
\url{www.statmodel.com}

Enders, C. K. (2010). \emph{Applied missing data analysis}. New York, NY:
Guilford.

Li, K.-H., Meng, X.-L., Raghunathan, T. E., & Rubin, D. B. (1991).
Significance levels from repeated \emph{p}-values with multiply-imputed data.
\emph{Statistica Sinica, 1}(1), 65--92. Retrieved from
\url{http://www.jstor.org/stable/24303994}

Meng, X.-L., & Rubin, D. B. (1992). Performing likelihood ratio tests with
multiply-imputed data sets. \emph{Biometrika, 79}(1), 103--111. Retrieved
from \url{http://www.jstor.org/stable/2337151}

Rubin, D. B. (1987). \emph{Multiple imputation for nonresponse in surveys}.
New York, NY: Wiley.
}
\author{
Terrence D. Jorgensen (University of Amsterdam;
\email{TJorgensen314@gmail.com})
}
