% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runMI.R
\name{calculate.D2}
\alias{calculate.D2}
\title{Calculate the "D2" statistic}
\usage{
calculate.D2(w, DF = 0L, asymptotic = FALSE)
}
\arguments{
\item{model}{The analysis model can be specified using lavaan
\code{\link[lavaan]{model.syntax}} or a parameter table (as returned by
\code{\link[lavaan]{parTable}}).}

\item{data}{A \code{data.frame} with missing observations, or a \code{list}
of imputed data sets (if data are imputed already). If \code{runMI} has
already been called, then imputed data sets are stored in the
\code{@DataList} slot, so \code{data} can also be a \code{lavaan.mi} object
from which the same imputed data will be used for additional analyses.}

\item{fun}{\code{character}. Name of a specific lavaan function used to fit
\code{model} to \code{data} (i.e., \code{"lavaan"}, \code{"cfa"},
\code{"sem"}, or \code{"growth"}). Only required for \code{runMI}.}

\item{\dots}{additional arguments to pass to \code{\link[lavaan]{lavaan}} or
\code{\link[lavaan]{lavaanList}}. See also \code{\link[lavaan]{lavOptions}}.
Note that \code{lavaanList} provides parallel computing options, as well as
a \code{FUN} argument so the user can extract custom output after the model
is fitted to each imputed data set (see \strong{Examples}).  TIP: If a
custom \code{FUN} is used \emph{and} \code{parallel = "snow"} is requested,
the user-supplied function should explicitly call \code{library} or use
\code{\link[base]{::}} for any functions not part of the base distribution.}

\item{m}{\code{integer}. Request the number of imputations. Ignored if
\code{data} is already a \code{list} of imputed data sets or a
\code{lavaan.mi} object.}

\item{miArgs}{Addition arguments for the multiple-imputation function
(\code{miPackage}). The arguments should be put in a list (see example
below). Ignored if \code{data} is already a \code{list} of imputed data
sets or a \code{lavaan.mi} object.}

\item{miPackage}{Package to be used for imputation. Currently these
functions only support \code{"Amelia"} or \code{"mice"} for imputation.
Ignored if \code{data} is already a \code{list} of imputed data sets or a
\code{lavaan.mi} object.}

\item{seed}{\code{integer}. Random number seed to be set before imputing the
data. Ignored if \code{data} is already a \code{list} of imputed data sets
or a \code{lavaan.mi} object.}
}
\value{
A \code{\linkS4class{lavaan.mi}} object
}
\description{
This is a utility function used to calculate the "D2" statistic for pooling
test statistics across multiple imputations. This function is called by
several functions used for \code{\linkS4class{lavaan.mi}} objects, such as
\code{\link{lavTestLRT.mi}}, \code{\link{lavTestWald.mi}}, and
\code{\link{lavTestScore.mi}}. But this function can be used for any general
scenario because it only requires a vector of \eqn{\chi^2} statistics (one
from each imputation) and the degrees of freedom for the test statistic.
See Li, Meng, Raghunathan, & Rubin (1991) and Enders (2010, chapter 8) for
details about how it is calculated.
}
\examples{
## generate a vector of chi-squared values, just for example
DF <- 3 # degrees of freedom
M <- 20 # number of imputations
CHI <- rchisq(M, DF)

## pool the "results"
calculate.D2(CHI, DF) # by default, an F statistic is returned
calculate.D2(CHI, DF, asymptotic = TRUE) # asymptotically chi-squared

## generate standard-normal values, for an example of Wald z tests
Z <- rnorm(M)
calculate.D2(Z) # default DF = 0 will square Z to make chisq(DF = 1)
## F test is equivalent to a t test with the denominator DF


}
\references{
Enders, C. K. (2010). \emph{Applied missing data analysis}. New
  York, NY: Guilford.

  Li, K.-H., Meng, X.-L., Raghunathan, T. E., & Rubin, D. B. (1991).
  Significance levels from repeated \emph{p}-values with multiply-imputed
  data. \emph{Statistica Sinica, 1}(1), 65--92. Retrieved from
  \url{http://www.jstor.org/stable/24303994}
}
\seealso{
\code{\link{lavTestLRT.mi}}, \code{\link{lavTestWald.mi}},
  \code{\link{lavTestScore.mi}}
}
\author{
Terrence D. Jorgensen (University of Amsterdam;
  \email{TJorgensen314@gmail.com})
}
